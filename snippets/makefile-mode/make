# key: _make
# name: make
# expand-env: ((yas-indent-line 'fixed))
# --
# ${1:name}

.POSIX:
.SUFFIXES:
.SUFFIXES: ${2: .asd .lisp .txt}

VERSION=$(shell cat version)
${1:$(replace-regexp-in-string "-" "_" (upcase yas-text))}=$1
PACKAGE=$1-$(VERSION)

# variables${3:
ASDSRCS=\$(wildcard *.asd)
LISPSRCS=\$(wildcard *.lisp)
SRCS=\$(ASDSRCS) \$(LISPSRCS)
}
EMACSFLAGS=--batch -Q${4:
LISPFLAGS=--no-userinit --non-interactive --noinform
}


# paths
srcdir=.

prefix=/usr/local
exec_prefix=$(prefix)
bindir=$(exec_prefix)/bin
libdir=$(exec_prefix)/lib
libexecdir=$(exec_prefix)/libexec/$(${1:$(replace-regexp-in-string "-" "_" (upcase yas-text))})
lispdir=$(exec_prefix)/lisp/$(${1:$(replace-regexp-in-string "-" "_" (upcase yas-text))})

datarootdir=$(prefix)/share
datadir=$(datarootdir)/$(${1:$(replace-regexp-in-string "-" "_" (upcase yas-text))})
docdir=$(datarootdir)/doc/$(${1:$(replace-regexp-in-string "-" "_" (upcase yas-text))})
infodir=$(datarootdir)/info

# programs
INSTALL=/usr/bin/install
INSTALL_DATA=$(INSTALL) -m 644
LS=/usr/local/bin/gls
MAKEINFO=/usr/local/bin/makeinfo
EMACS=/usr/local/bin/emacs
${5:LISP=/usr/local/bin/sbcl}

.PHONY:
all:

.PHONY:
check:

.PHONY:
clean:${6:
	-rm **/*.fasl
}

.PHONY:
distclean: clean
	-rm $(PACKAGE).tar.gz

.PHONY:
dist: distclean
	-rm -rf $(PACKAGE)
	mkdir -p $(PACKAGE)
	cp -R $(shell $(LS) --ignore$(PACKAGE)) $(PACKAGE)
	tar czf $(PACKAGE).tar.gz $(PACKAGE)
	-rm -rf $(PACKAGE)

.PHONY:
do-install-info: $1.info installdirs
	$(INSTALL_DATA) $< $(DESTDIR)$(infodir)/$<
	# run install-info if available
	if $(SHELL) -c 'install-info --version' \
	   >/dev/null 2>&1; then \
	   install-info --dir-file="$(DESTDIR)$(infodir)/dir" \
	                "$(DESTDIR)$(infodir)/$<"; \
	else true; fi

.PHONY:
install: all installdirs do-install-info

.PHONY:
uninstall:

.PHONY:
installdirs:
	mkdir -p $(DESTDIR)$(infodir)

.PHONY:
info: $1.info

$1.info: doc/$1.texi doc/dict.texi
	$(MAKEINFO) $(srcdir)/$<

index.html: doc/$1.texi doc/dict.texi
	$(MAKEINFO) --html --no-split -o $@ $<

doc/$1.texi: doc/$1.org version
	-rm $@
	$(EMACS) $< $(EMACSFLAGS) -l $(realpath doc/org-export.el) -f org-texinfo-export-to-texinfo

doc/dict.texi: $(SRCS) version
	$(LISP) $(LISPFLAGS) \
	--load load.lisp \
	--eval '(asdf:load-system "$1")' \
	--eval '(asdf:load-system "sb-texinfo")' \
	--eval '(sb-texinfo:document-package :$1 :output-file "$@" :standalone nil :write-backmatter nil :write-menu nil :exclude-node t)'

README.txt: doc/README.org version
	-rm $@
	$(EMACS) $< $(EMACSFLAGS) -l $(realpath doc/org-export.el) -f org-ascii-export-to-ascii
